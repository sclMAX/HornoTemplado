#ifndef PT100_O
#include "Arduino.h"
#define PT100_O
class PT100
{
  private:
    // known resistance in voltage divider
    static const float R1 = 125;
    /*  static const int sensorDatoLow = 535; //Dato leido a 535@7Cº.
    static const int sensorDatoDif = 55;  //Diferencia entre Dato leido a -Cº y +Cº.590@75º - 535@7º
    static const int tempValueLow = 7;    //Valor real de -Cº medido.
    static const int tempValueDif = 68;   //Diferencia entre valor medido a -Cº y +Cº.75º - 7º*/
    int PIN;
    double Temp;
    int dato;
    float MultiMap(float);
    void readTemp();

  public:
    PT100(int);
    float getTemp();
    float getDato();
};

PT100::PT100(int pin)
{
    PIN = pin;
    dato = 0;
    Temp = 0;
};

float PT100::MultiMap(float val)
{

    static const int TT = 250;
    static const float _in[TT] = {
        100.00, 100.39, 100.78, 101.17, 101.56, 101.95, 102.34, 102.73, 103.12, 103.51,
        103.90, 104.29, 104.68, 105.07, 105.46, 105.85, 106.24, 106.63, 107.02, 107.41,
        107.79, 108.18, 108.57, 108.96, 109.35, 109.74, 110.12, 110.51, 110.90, 111.29,
        111.67, 112.06, 112.45, 112.84, 113.22, 113.61, 114.00, 114.38, 114.77, 115.16,
        115.54, 115.93, 116.32, 116.70, 117.09, 117.47, 117.86, 118.24, 118.63, 119.01,
        119.40, 119.78, 120.17, 120.55, 120.94, 121.32, 121.71, 122.09, 122.48, 122.86,
        123.24, 123.63, 124.01, 124.39, 124.78, 125.16, 125.54, 125.93, 126.31, 126.69,
        127.07, 127.46, 127.84, 128.22, 128.60, 128.99, 129.37, 129.75, 130.13, 130.51,
        130.89, 131.28, 131.66, 132.04, 132.42, 132.80, 133.18, 133.56, 133.94, 134.32,
        134.70, 135.08, 135.46, 135.84, 136.22, 136.60, 136.98, 137.36, 137.74, 138.12,
        138.50, 138.88, 139.26, 139.64, 140.02, 140.40, 140.77, 141.15, 141.53, 141.91,
        142.29, 142.67, 143.04, 143.42, 143.80, 144.18, 144.55, 144.93, 145.31, 145.69,
        146.06, 146.44, 146.82, 147.19, 147.57, 147.95, 148.32, 148.70, 149.07, 149.45,
        149.83, 150.20, 150.58, 150.95, 151.33, 151.70, 152.08, 152.45, 152.83, 153.20,
        153.58, 153.95, 154.33, 154.70, 155.08, 155.45, 155.83, 156.20, 156.57, 156.95,
        157.32, 157.69, 158.07, 158.44, 158.81, 159.19, 159.56, 159.93, 160.30, 160.68,
        161.05, 161.42, 161.79, 162.16, 162.53, 162.91, 163.28, 163.65, 164.02, 164.39,
        164.76, 165.13, 165.50, 165.88, 166.25, 166.62, 166.99, 167.36, 167.73, 168.10,
        168.47, 168.84, 169.21, 169.58, 169.95, 170.31, 170.68, 171.05, 171.42, 171.79,
        172.16, 172.53, 172.90, 173.26, 173.63, 174.00, 174.37, 174.74, 175.10, 175.47,
        175.84, 176.21, 176.58, 176.94, 177.31, 177.68, 178.04, 178.41, 178.78, 179.14,
        179.51, 179.88, 180.24, 180.61, 180.98, 181.34, 181.71, 182.07, 182.44, 182.81,
        183.17, 183.54, 183.90, 184.27, 184.63, 185.00, 185.36, 185.73, 186.09, 186.45,
        186.82, 187.18, 187.55, 187.91, 188.27, 188.64, 189.00, 189.37, 189.73, 190.09,
        190.46, 190.82, 191.18, 191.54, 191.91, 192.27, 192.63, 192.99, 193.36, 193.72};
    // calculate if value is out of range
    if (val < _in[0])
        return -99.99;
    if (val > _in[TT - 1])
        return 99.99;
    //  search for 'value' in _in array to get the position No.
    uint8_t pos = 0;
    while (val > _in[pos])
        pos++;
    // handles the 'rare' equality case
    if (val == _in[pos])
        return pos;
    float r1 = _in[pos - 1];
    float r2 = _in[pos];
    int c1 = pos - 1;
    int c2 = pos;
    return c1 + (val - r1) / (r2 - r1) * (c2 - c1);
}

void PT100::readTemp()
{
    float vd = 0;
    for (int i = 0; i < 10; i++)
    {
        vd += analogRead(PIN);
        delay(1);
    }
    dato = vd / 10;
    float Vout = dato * (5.0 / 1023.0);
    float R2 = R1 * 1 / (5.0 / Vout - 1);
    Temp = MultiMap(R2);
};

float PT100::getTemp()
{
    readTemp();
    return Temp;
};

float PT100::getDato()
{
    float Vout = dato * (5.0 / 1023.0);
    float R2 = R1 * 1 / (5.0 / Vout - 1);
    return R2;
};
#endif // !PT100_O